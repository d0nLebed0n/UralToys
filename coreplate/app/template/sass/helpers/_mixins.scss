// Font
@mixin fonts($font-family, $font-name, $font-weight, $font-style) {
    @if $font-style == "italic" {
        @font-face {
            font-family: $font-family;
            src: url("../fonts/#{$font-name}-#{$font-weight}i.woff2") format("woff2"),
                 url("../fonts/#{$font-name}-#{$font-weight}i.woff") format("woff");
            font-weight: $font-weight;
            font-style: $font-style;
        }
    } @else {
        @font-face {
            font-family: $font-family;
            src: url("../fonts/#{$font-name}-#{$font-weight}.woff2") format("woff2"),
                 url("../fonts/#{$font-name}-#{$font-weight}.woff") format("woff");
            font-weight: $font-weight;
            font-style: $font-style;
        }
    }
}

//Adaptive
@mixin adaptive($media-width) {
    @media screen and (max-width: #{$media-width}px) {
        @content;
    }
}



//Touch adaptive
@mixin touch {
  @media (pointer:coarse) {
      @content;
  }
}

//Target - smartphones
@mixin phone {
  @media screen and (max-width: 479px) {
      @content;
  }
}

//target - tablets
@mixin tablet {
  @media screen and (min-width:480px) and (max-width:800px) {
    @content;
  }
}

//placeholder

@mixin placeholder {
  &::-webkit-input-placeholder { @content; }
  &:-moz-placeholder           { @content; }
  &::-moz-placeholder          { @content; }
  &:-ms-input-placeholder      { @content; }
}


//  grid ie mixin
$☠__ms-col-gap: null;
$☠__ms-row-gap: null;
$☠__ms-col-count: null;
$☠__ms-row-count: null;
@mixin grid-column($start: auto, $span: 1){
	//  grid-column-gap using left margin
	@if $☠__ms-col-gap and not $☠__ms-col-count and $start != 1 {
		margin-left: $☠__ms-col-gap;
		@supports (grid-column-gap: 1px){ margin-left: 0; }
	}
	-ms-grid-column: if($☠__ms-col-count, $start + $start - 1, $start);
	-ms-grid-column-span: if($☠__ms-col-count, $span + $span - 1, $span);
	grid-column: #{$start}/#{$start + $span};
	@content;
}
//
//  grid-row mixin
//
@mixin grid-row($start: auto, $span: 1){
	//  grid-row-gap using top margin
	@if $☠__ms-row-gap and not $☠__ms-row-count and $start != 1 {
		margin-top: $☠__ms-row-gap;
		@supports (grid-row-gap: 1px){ margin-top: 0; }
	}
	-ms-grid-row: if($☠__ms-row-count, $start + $start - 1, $start);
	-ms-grid-row-span: if($☠__ms-row-count, $span + $span - 1, $span);
	grid-row: #{$start}/#{$start + $span};
	@content;
}

@mixin grid-area($area){
	$area: map-get($grid-areas, $area);
	@include grid-column(nth($area, 1), nth($area, 2));
	@include grid-row(nth($area, 3), nth($area, 4));
	@content;
}
